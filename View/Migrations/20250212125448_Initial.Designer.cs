// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.Context;

#nullable disable

namespace View.Migrations
{
    [DbContext(typeof(OuterRimContext))]
    [Migration("20250212125448_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("Model.Entities.Aircraft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Altitude")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fuel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("SpecificationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SpecificationId");

                    b.ToTable("AIRCRAFTS");
                });

            modelBuilder.Entity("Model.Entities.AircraftCrew", b =>
                {
                    b.Property<int>("AircraftId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MercenaryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("AircraftId", "MercenaryId");

                    b.HasIndex("MercenaryId");

                    b.ToTable("AIRCRAFT_CREW_JT");
                });

            modelBuilder.Entity("Model.Entities.AircraftSpecification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FuelTankCapacity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxAltitude")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxSpeed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinSpeed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SpezificationCode")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT");

                    b.Property<int>("Structure")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AIRCRAFT_SPECIFICATIONS");
                });

            modelBuilder.Entity("Model.Entities.Compartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AircraftId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId");

                    b.ToTable("COMPARTMENTS");
                });

            modelBuilder.Entity("Model.Entities.CrimeSyndicate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CRIME_SYNDICATES");
                });

            modelBuilder.Entity("Model.Entities.EnergySystem", b =>
                {
                    b.Property<int>("MachineryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MachineryId");

                    b.ToTable("ENERGY_SYSTEMS");
                });

            modelBuilder.Entity("Model.Entities.EnviromentalSystem", b =>
                {
                    b.Property<int>("MachineryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MachineryId");

                    b.ToTable("ENVIROMENTAL_SYSTEMS");
                });

            modelBuilder.Entity("Model.Entities.Machinery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Function")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompartmentId");

                    b.ToTable("MACHINERIES");
                });

            modelBuilder.Entity("Model.Entities.Mercenary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BodySkills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CombatSkills")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MERCENARIES");
                });

            modelBuilder.Entity("Model.Entities.MercenaryReputation", b =>
                {
                    b.Property<int>("SyndicateId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MercenaryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReputationChange")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT");

                    b.HasKey("SyndicateId", "MercenaryId");

                    b.HasIndex("MercenaryId");

                    b.ToTable("MERCENARY_REPUTATIONS");
                });

            modelBuilder.Entity("Model.Entities.Weapon", b =>
                {
                    b.Property<int>("MachineryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MachineryId");

                    b.ToTable("WEAPONS");
                });

            modelBuilder.Entity("Model.Entities.Aircraft", b =>
                {
                    b.HasOne("Model.Entities.AircraftSpecification", "AircraftSpecification")
                        .WithMany("Aircrafts")
                        .HasForeignKey("SpecificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AircraftSpecification");
                });

            modelBuilder.Entity("Model.Entities.AircraftCrew", b =>
                {
                    b.HasOne("Model.Entities.Aircraft", "Aircraft")
                        .WithMany("AircraftCrews")
                        .HasForeignKey("AircraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Entities.Mercenary", "Mercenary")
                        .WithMany("AircraftCrews")
                        .HasForeignKey("MercenaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aircraft");

                    b.Navigation("Mercenary");
                });

            modelBuilder.Entity("Model.Entities.Compartment", b =>
                {
                    b.HasOne("Model.Entities.Aircraft", "Aircraft")
                        .WithMany("Compartments")
                        .HasForeignKey("AircraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aircraft");
                });

            modelBuilder.Entity("Model.Entities.EnergySystem", b =>
                {
                    b.HasOne("Model.Entities.Machinery", "Machinery")
                        .WithOne("EnergySystem")
                        .HasForeignKey("Model.Entities.EnergySystem", "MachineryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machinery");
                });

            modelBuilder.Entity("Model.Entities.EnviromentalSystem", b =>
                {
                    b.HasOne("Model.Entities.Machinery", "Machinery")
                        .WithOne("EnviromentalSystem")
                        .HasForeignKey("Model.Entities.EnviromentalSystem", "MachineryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machinery");
                });

            modelBuilder.Entity("Model.Entities.Machinery", b =>
                {
                    b.HasOne("Model.Entities.Compartment", "Compartment")
                        .WithMany("Machineries")
                        .HasForeignKey("CompartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compartment");
                });

            modelBuilder.Entity("Model.Entities.MercenaryReputation", b =>
                {
                    b.HasOne("Model.Entities.Mercenary", "Mercenary")
                        .WithMany("MercenaryReputations")
                        .HasForeignKey("MercenaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Entities.CrimeSyndicate", "CrimeSyndicate")
                        .WithMany("MercenaryReputations")
                        .HasForeignKey("SyndicateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CrimeSyndicate");

                    b.Navigation("Mercenary");
                });

            modelBuilder.Entity("Model.Entities.Weapon", b =>
                {
                    b.HasOne("Model.Entities.Machinery", "Machinery")
                        .WithOne("Weapon")
                        .HasForeignKey("Model.Entities.Weapon", "MachineryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machinery");
                });

            modelBuilder.Entity("Model.Entities.Aircraft", b =>
                {
                    b.Navigation("AircraftCrews");

                    b.Navigation("Compartments");
                });

            modelBuilder.Entity("Model.Entities.AircraftSpecification", b =>
                {
                    b.Navigation("Aircrafts");
                });

            modelBuilder.Entity("Model.Entities.Compartment", b =>
                {
                    b.Navigation("Machineries");
                });

            modelBuilder.Entity("Model.Entities.CrimeSyndicate", b =>
                {
                    b.Navigation("MercenaryReputations");
                });

            modelBuilder.Entity("Model.Entities.Machinery", b =>
                {
                    b.Navigation("EnergySystem")
                        .IsRequired();

                    b.Navigation("EnviromentalSystem")
                        .IsRequired();

                    b.Navigation("Weapon")
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Entities.Mercenary", b =>
                {
                    b.Navigation("AircraftCrews");

                    b.Navigation("MercenaryReputations");
                });
#pragma warning restore 612, 618
        }
    }
}
